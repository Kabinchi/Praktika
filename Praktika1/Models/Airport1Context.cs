// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Airport.Models;

public partial class Airport1Context : DbContext
{
    public Airport1Context()
    {
    }

    public Airport1Context(DbContextOptions<Airport1Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Airline> Airlines { get; set; }

    public virtual DbSet<Airplane> Airplanes { get; set; }

    public virtual DbSet<CrewMember> CrewMembers { get; set; }

    public virtual DbSet<Flight> Flights { get; set; }

    public virtual DbSet<Passenger> Passengers { get; set; }

    public virtual DbSet<Ticket> Tickets { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-A928918\\SQLEXPRESS;Initial Catalog=Airport1;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Airline>(entity =>
        {
            entity.HasKey(e => e.Airline_ID).HasName("PK_Airlines_1");

            entity.HasIndex(e => e.Airline_Name, "IX_Airline_Name");

            entity.Property(e => e.Airline_Name)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Country)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Type)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Airplane>(entity =>
        {
            entity.HasKey(e => e.Airplane_ID).HasName("PK_Airplane_1");

            entity.ToTable("Airplane");

            entity.Property(e => e.Board_Number)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);

            entity.HasOne(d => d.Airline).WithMany(p => p.Airplanes)
                .HasForeignKey(d => d.Airline_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Airplane_Airlines1");
        });

        modelBuilder.Entity<CrewMember>(entity =>
        {
            entity.HasKey(e => e.CrewMember_ID).HasName("PK_CrewMembers_1");

            entity.Property(e => e.First_Name)
                .IsRequired()
                .HasMaxLength(75)
                .IsUnicode(false);
            entity.Property(e => e.Last_Name)
                .IsRequired()
                .HasMaxLength(75)
                .IsUnicode(false);
            entity.Property(e => e.Middle_Name)
                .HasMaxLength(75)
                .IsUnicode(false);
            entity.Property(e => e.Position)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Airplane).WithMany(p => p.CrewMembers)
                .HasForeignKey(d => d.Airplane_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CrewMembers_Airplane1");
        });

        modelBuilder.Entity<Flight>(entity =>
        {
            entity.HasKey(e => e.Flight_ID).HasName("PK_Flights_1");

            entity.Property(e => e.Arrival_Date_Time).HasColumnType("datetime");

            entity.HasOne(d => d.Airline).WithMany(p => p.Flights)
                .HasForeignKey(d => d.Airline_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Flights_Airlines1");

            entity.HasOne(d => d.Airplane).WithMany(p => p.Flights)
                .HasForeignKey(d => d.Airplane_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Flights_Airplane1");
        });

        modelBuilder.Entity<Passenger>(entity =>
        {
            entity.HasKey(e => e.Passenger_ID).HasName("PK_Passengers_1");

            entity.ToTable(tb => tb.HasTrigger("TR_Passengers_Tickets"));

            entity.Property(e => e.Departure_Date).HasColumnType("date");
            entity.Property(e => e.Departure_Point)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Destination)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.First_Name)
                .IsRequired()
                .HasMaxLength(75)
                .IsUnicode(false);
            entity.Property(e => e.Last_Name)
                .IsRequired()
                .HasMaxLength(75)
                .IsUnicode(false);
            entity.Property(e => e.Middle_Name)
                .HasMaxLength(75)
                .IsUnicode(false);

            entity.HasOne(d => d.Airplane).WithMany(p => p.Passengers)
                .HasForeignKey(d => d.Airplane_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Passengers_Airplane1");
        });

        modelBuilder.Entity<Ticket>(entity =>
        {
            entity.HasKey(e => e.Ticket_ID).HasName("PK_Tickets_1");

            entity.Property(e => e.Purchase_Date_Time).HasColumnType("datetime");
            entity.Property(e => e.Ticket_Class)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Passenger).WithMany(p => p.Tickets)
                .HasForeignKey(d => d.Passenger_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Tickets_Passengers1");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}